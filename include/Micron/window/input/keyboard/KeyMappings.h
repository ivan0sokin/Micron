#ifndef _MICRON_WINDOW_INPUT_KEYBAORD_KEYCODE_LIST_H
#define _MICRON_WINDOW_INPUT_KEYBOARD_KEYCODE_LIST_H

#include <IOWindow/IOKeyboardMappings.h>

#include "../../../core/Core.h"

namespace Micron
{
	enum class Keycode : UInt16
	{
		Spacebar = IO_KEY_SPACE,
		Apostrophe = IO_KEY_APOSTROPHE,
		Plus = IO_KEY_PLUS,
		Comma = IO_KEY_COMMA,
		Minus = IO_KEY_MINUS,
		Period = IO_KEY_PERIOD,
		Slash = IO_KEY_SLASH,
		Semicolon = IO_KEY_SEMICOLON,
		Equal = IO_KEY_EQUAL,
		LeftBracket = IO_KEY_LEFT_BRACKET,
		Backslash = IO_KEY_BACKSLASH,
		RightBracket = IO_KEY_RIGHT_BRACKET,
		GraveAccent = IO_KEY_GRAVE_ACCENT,
		Zero = IO_KEY_0,
		One = IO_KEY_1,
		Two = IO_KEY_2,
		Three = IO_KEY_3,
		Four = IO_KEY_4,
		Five = IO_KEY_5,
		Six = IO_KEY_6,
		Seven = IO_KEY_7,
		Eight = IO_KEY_8,
		Nine = IO_KEY_9,
		A = IO_KEY_A,
		B = IO_KEY_B,
		C = IO_KEY_C,
		D = IO_KEY_D,
		E = IO_KEY_E,
		F = IO_KEY_F,
		G = IO_KEY_G,
		H = IO_KEY_H,
		I = IO_KEY_I,
		J = IO_KEY_J,
		K = IO_KEY_K,
		L = IO_KEY_L,
		M = IO_KEY_M,
		N = IO_KEY_N,
		O = IO_KEY_O,
		P = IO_KEY_P,
		Q = IO_KEY_Q,
		R = IO_KEY_R,
		S = IO_KEY_S,
		T = IO_KEY_T,
		U = IO_KEY_U,
		V = IO_KEY_V,
		W = IO_KEY_W,
		X = IO_KEY_X,
		Y = IO_KEY_Y,
		Z = IO_KEY_Z,
		NumPadZero = IO_KEY_NUMPAD_0,
		NumPadOne = IO_KEY_NUMPAD_1,
		NumPadTwo = IO_KEY_NUMPAD_2,
		NumPadThree = IO_KEY_NUMPAD_3,
		NumPadFour = IO_KEY_NUMPAD_4,
		NumPadFive = IO_KEY_NUMPAD_5,
		NumPadSix = IO_KEY_NUMPAD_6,
		NumPadSeven = IO_KEY_NUMPAD_7,
		NumPadEight = IO_KEY_NUMPAD_8,
		NumPadNine = IO_KEY_NUMPAD_9,
		NumPadAdd = IO_KEY_NUMPAD_ADD,
		NumPadSubtract = IO_KEY_NUMPAD_SUBTRACT,
		NumPadMultiply = IO_KEY_NUMPAD_MULTIPLY,
		NumPadDivide = IO_KEY_NUMPAD_DIVIDE,
		NumPadDecimal = IO_KEY_NUMPAD_DECIMAL,
		NumPadEqual = IO_KEY_NUMPAD_EQUAL,
		NumPadEnter = IO_KEY_NUMPAD_ENTER,
		NumLock = IO_KEY_NUMLOCK,
		ScrollLock = IO_KEY_SCRLOCK,
		CapsLock = IO_KEY_CAPSLOCK,
		Clear = IO_KEY_CLEAR,
		Escape = IO_KEY_ESCAPE,
		Backspace = IO_KEY_BACKSPACE,
		Tab = IO_KEY_TAB,
		Enter = IO_KEY_ENTER,
		Select = IO_KEY_SELECT,
		Print = IO_KEY_PRINT,
		Execute = IO_KEY_EXECUTE,
		PrintScreen = IO_KEY_PRINTSCREEN,
		PauseBreak = IO_KEY_PAUSE,
		Help = IO_KEY_HELP,
		PageUp = IO_KEY_PAGEUP,
		PageDown = IO_KEY_PAGEDOWN,
		End = IO_KEY_END,
		Home = IO_KEY_HOME,
		LeftArrow = IO_KEY_LEFT_ARROW,
		UpArrow = IO_KEY_UP_ARROW,
		RightArrow = IO_KEY_RIGHT_ARROW,
		DownArrow = IO_KEY_DOWN_ARROW,
		Insert = IO_KEY_INSERT,
		Delete = IO_KEY_DELETE,
		Shift = IO_KEY_SHIFT,
		Ctrl = IO_KEY_CTRL,
		Alt = IO_KEY_ALT,
		LeftShift = IO_KEY_LEFT_SHIFT,
		RightShift = IO_KEY_RIGHT_SHIFT,
		LeftCtrl = IO_KEY_LEFT_CTRL,
		RightCtrl = IO_KEY_RIGHT_CTRL,
		LeftAlt = IO_KEY_LEFT_ALT,
		RightAlt = IO_KEY_RIGHT_ALT,
		F1 = IO_KEY_F1,
		F2 = IO_KEY_F2,
		F3 = IO_KEY_F3,
		F4 = IO_KEY_F4,
		F5 = IO_KEY_F5,
		F6 = IO_KEY_F6,
		F7 = IO_KEY_F7,
		F8 = IO_KEY_F8,
		F9 = IO_KEY_F9,
		F10 = IO_KEY_F10,
		F11 = IO_KEY_F11,
		F12 = IO_KEY_F12,
		F13 = IO_KEY_F13,
		F14 = IO_KEY_F14,
		F15 = IO_KEY_F15,
		F16 = IO_KEY_F16,
		F17 = IO_KEY_F17,
		F18 = IO_KEY_F18,
		F19 = IO_KEY_F19,
		F20 = IO_KEY_F20,
		F21 = IO_KEY_F21,
		F22 = IO_KEY_F22,
		F23 = IO_KEY_F23,
		F24 = IO_KEY_F24,
		VolumeMute = IO_KEY_VOLUME_MUTE,
		VolumeUp = IO_KEY_VOLUME_UP,
		VolumeDown = IO_KEY_VOLUME_DOWN,
		LeftWindows = IO_KEY_LEFT_WINDOWS,
		RightWindows = IO_KEY_RIGHT_WINDOWS,
		Applications = IO_KEY_APPLICATIONS
	};

	String ToString(Keycode const &keycode) noexcept;
}

#endif